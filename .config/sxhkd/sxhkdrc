# restart
ctrl + shift + r
  ~/.config/bspwm/bspwmrc; killall -q sxhkd; sxhkd

#===============================================================================
# MONITORS
#===============================================================================

alt + ctrl + shift + {1,2,3}
  $HOME/.local/bin/xrandr.py {1,2,3} &>/dev/null

#===============================================================================
# LAUNCHERS
#===============================================================================

# opening and closing apps
alt + {Return,w}
  {$TERMINAL,$BROWSER}
alt + {_,shift + }q
	bspc node -{c,k}

# program toggles
alt + c
  pgrep redshift &>/dev/null && killall redshift || redshift

#===============================================================================
# FOCUS AND SWAP CONTROLS
#===============================================================================

# focus window directional, shift to swap or move (if floating) directional
alt + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus space number, shift to swap to space (with follow focus)
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} ^{1-9,10}

# focus display number, shift to swap to display
alt + ctrl + {_,shift + }{1-3}
  bspc {monitor -f,node -m} ^{1-3}

# focus desktop directional
alt + {g,semicolon}
	bspc desktop {prev,next} --focus # bspc desktop {prev,next}.occupied --focus

#===============================================================================
# WINDOW MANIPULATION
#===============================================================================

# flip along x, shift for along y
alt + {_,shift +}x
  bspc node @focused:/ {--flip horizontal,--flip vertical}

# Increase/descrease gap size
alt + {_,shift +}z
	bspc config window_gap $(($(bspc config window_gap) {+,-} 3))

# set the window state
alt + shift + space
	bspc node focused -t \~floating

# alternate between the tiled and monocle layout
alt + {_,shift + }f
	bspc {desktop -l next,node -t ~fullscreen}

# # resize window in direction
# alt + {y,u,i,o}
# 	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# toggle fullscreen
alt + {_,shift + }f
	bspc desktop -l next

# rotate ccw 90, shift for cw 90
alt + {_,shift + }r
  bspc node @focused:/ {--rotate 90,--rotate -90}

#===============================================================================
# OTHER CONTROLS
#===============================================================================

# audio controls (1 is native, 2 is hdmi)
XF86Audio{Raise,Lower}Volume
  pactl -- set-sink-volume 1 {+,-}5%

XF86AudioMute
  pactl set-sink-mute 1 toggle

# screen and keyboard backlight brightness
XF86MonBrightness{Up,Down}
  light -s "sysfs/backlight/intel_backlight" -{A,U} 5

XF86KbdBrightness{Up,Down}
  light -s "sysfs/leds/smc::kbd_backlight" -{A,U} 5

# Workaround for immutable firefox keybindings
#super + {f,c,v,a,t,w}
#  key={f,c,v,a,t,w}; \
#  $HOME/.config/sxhkd/cmd.sh $key


# Workaround for immutable firefox keybindings
super + {f,c,v,a,t,w}
  key={f,c,v,a,t,w}; \
  W=$(xdotool getactivewindow); \
  S1=$(xprop -id ${W} | awk '/WM_CLASS/\{ print $4 \}'); \
  if [ $S1 = '"Firefox"' ]; then \
    xte "keyup ${key}" "keyup Super_L" "keydown Control_L" \
        "key ${key}"                   "keyup Control_L" "keydown Super_L"; \
  else \
    xte "keyup ${key}" "keyup Super_L" "keydown Control_L" "keydown Shift_L" \
        "key ${key}"   "keyup Shift_L" "keyup Control_L" "keydown Super_L"; \
  fi

super + shift + t
  key={t}; \
  xte "keyup ${key}" "keyup Super_L" "keydown Control_L" "key ${key}" \
      "keyup Control_L" "keydown Super_L"
